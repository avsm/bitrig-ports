$OpenBSD$
--- lib/CodeGen/StackProtector.cpp.orig	Sat Oct 20 22:47:51 2012
+++ lib/CodeGen/StackProtector.cpp	Sat Oct 20 22:44:11 2012
@@ -180,12 +180,12 @@ bool StackProtector::InsertStackProtectors() {
     if (!RI) continue;
 
     if (!FailBB) {
-      // Insert code into the entry block that stores the __stack_chk_guard
+      // Insert code into the entry block that stores the __guard_local
       // variable onto the stack:
       //
       //   entry:
       //     StackGuardSlot = alloca i8*
-      //     StackGuard = load __stack_chk_guard
+      //     StackGuard = load __guard_local@local
       //     call void @llvm.stackprotect.create(StackGuard, StackGuardSlot)
       //
       PointerType *PtrTy = Type::getInt8PtrTy(RI->getContext());
@@ -197,7 +197,7 @@ bool StackProtector::InsertStackProtectors() {
         StackGuardVar = ConstantExpr::getIntToPtr(OffsetVal,
                                       PointerType::get(PtrTy, AddressSpace));
       } else {
-        StackGuardVar = M->getOrInsertGlobal("__stack_chk_guard", PtrTy);
+        StackGuardVar = M->getOrInsertLinkerPrivate("__guard_local", PtrTy);
       }
 
       BasicBlock &Entry = F->getEntryBlock();
@@ -225,7 +225,7 @@ bool StackProtector::InsertStackProtectors() {
     //
     //   return:
     //     ...
-    //     %1 = load __stack_chk_guard
+    //     %1 = load __guard_local
     //     %2 = load StackGuardSlot
     //     %3 = cmp i1 %1, %2
     //     br i1 %3, label %SP_return, label %CallStackCheckFailBlk
